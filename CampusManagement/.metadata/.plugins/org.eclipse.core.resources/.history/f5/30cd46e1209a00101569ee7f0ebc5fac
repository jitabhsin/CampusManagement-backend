package edu.infosys.lostAndFoundApplication.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import edu.infosys.lostAndFoundApplication.bean.LostFoundItem;
import edu.infosys.lostAndFoundApplication.dao.LostFoundItemDao;

@RestController
@RequestMapping("/lost-found")
@CrossOrigin(origins = "http://localhost:3939")
public class LostFoundItemController {

    @Autowired
    private LostFoundItemDao lostFoundItemDao;

    // Get all items
    @GetMapping("/item")
    public List<LostFoundItem> getAllItems() {
        return lostFoundItemDao.findAll();
    }

    // Get items not found
    @GetMapping("/not-found")
    public List<LostFoundItem> notFoundItemList() {
        return lostFoundItemDao.notFoundItemList();
    }

    // Get items that are found
    @GetMapping("/found")
    public List<LostFoundItem> foundItemList() {
        return lostFoundItemDao.foundItemList();
    }

    // Submit a lost item
    @PostMapping("/item")
    public void lostItemSubmission(@RequestBody LostFoundItem lostItem) {
        lostItem.setFoundDate(null);
        lostFoundItemDao.save(lostItem);
    }

    // Submit a found item
    @PutMapping("/item")
    public void foundItemSubmission(@RequestBody LostFoundItem lostItem) {
        lostFoundItemDao.save(lostItem);
    }

    // Get item by ID
    @GetMapping("/item/{id}")
    public LostFoundItem getItemById(@PathVariable Long id) {
        return lostFoundItemDao.findById(id).orElse(null);
    }

    // Delete item by ID
    @DeleteMapping("/item/{id}")
    public void deleteItemById(@PathVariable Long id) {
        lostFoundItemDao.deleteById(id);
    }

    // Generate new item ID
    @GetMapping("/id-gen")
    public Long itemIdGenerator() {
        return lostFoundItemDao.generateId();
    }
}
